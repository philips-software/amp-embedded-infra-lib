---
name: Continuous Integration

on:
  pull_request:
    types: [opened, synchronize, reopened]
  merge_group:

permissions:
  contents: read

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  GTEST_COLOR: 1

jobs:
  host_build_test_ubuntu:
    name: Host Build & Test (ubuntu-latest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          persist-credentials: false
      - uses: hendrikmuhs/ccache-action@faf867a11c028c0b483fb2ae72b6fc8f7d842714 # v1.2.12
        with:
          key: ${{ github.job }}-ubuntu-latest
          variant: sccache
      - uses: seanmiddleditch/gha-setup-ninja@8b297075da4cd2a5f1fd21fe011b499edf06e9d2 # v4
      - uses: lukka/run-cmake@2ce8982be71b8e9a3c4d5e432135035afd1e76a7 # v10.7
        with:
          configurePreset: "host"
          buildPreset: "host-Debug-WithPackage"
          testPreset: "host"
          configurePresetAdditionalArgs: "['-DCMAKE_C_COMPILER_LAUNCHER=sccache', '-DCMAKE_CXX_COMPILER_LAUNCHER=sccache']"
      - uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4.3.2
        with:
          name: emil
          path: build/host/emil-*-Linux.tar.gz
          if-no-files-found: error
      - name: Upload test logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4.3.2
        with:
          name: test-logs
          path: build/host/Testing/Temporary/
  host_build_test:
    name: Host Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, windows-2019]
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          persist-credentials: false
      - uses: hendrikmuhs/ccache-action@faf867a11c028c0b483fb2ae72b6fc8f7d842714 # v1.2.12
        with:
          key: ${{ github.job }}-${{ matrix.os }}
          variant: sccache
      - uses: lukka/run-cmake@2ce8982be71b8e9a3c4d5e432135035afd1e76a7 # v10.7
        with:
          configurePreset: "host-single-Debug"
          buildPreset: "host-single-Debug"
          testPreset: "host-single-Debug"
          configurePresetAdditionalArgs: "['-DCMAKE_C_COMPILER_LAUNCHER=sccache', '-DCMAKE_CXX_COMPILER_LAUNCHER=sccache']"
      - name: Upload test logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4.3.2
        with:
          name: test-logs
          path: build/host/Testing/Temporary/
  embedded_build:
    name: Embedded Build
    runs-on: ubuntu-latest
    needs: [host_build_test_ubuntu]
    strategy:
      matrix:
        gcc: ["7-2018-q2", "8-2019-q3", "9-2020-q2", "10.3-2021.10"]
        configuration: ["RelWithDebInfo"]
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          persist-credentials: false
      - name: Install GNU Arm Embedded Toolchain ${{ matrix.gcc }}
        uses: carlosperate/arm-none-eabi-gcc-action@3bd7199be896455c00fffba8a216770a3003a538 # v1.8.1
        with:
          release: ${{ matrix.gcc }}
      - run: sudo apt-get update && sudo apt-get install ninja-build
      - uses: hendrikmuhs/ccache-action@faf867a11c028c0b483fb2ae72b6fc8f7d842714 # v1.2.12
        with:
          key: ${{ github.job }}-${{ matrix.gcc }}-${{ matrix.configuration }}
      - uses: actions/download-artifact@8caf195ad4b1dee92908e23f56eeb0696f1dd42d # v4.1.5
        with:
          name: emil
      - run: tar -zxvf emil-*.tar.gz
      - run: mkdir install && mv emil-*/* install/
      - uses: lukka/run-cmake@2ce8982be71b8e9a3c4d5e432135035afd1e76a7 # v10.7
        with:
          configurePreset: "embedded"
          buildPreset: "embedded-${{ matrix.configuration }}"
          configurePresetAdditionalArgs: "['-DCMAKE_C_COMPILER_LAUNCHER=ccache', '-DCMAKE_CXX_COMPILER_LAUNCHER=ccache']"
  embedded_build_without_host_install:
    name: Embedded Build Without Host Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          persist-credentials: false
      - name: Install GNU Arm Embedded Toolchain 10.3-2021.10
        uses: carlosperate/arm-none-eabi-gcc-action@3bd7199be896455c00fffba8a216770a3003a538 # v1.8.1
        with:
          release: "10.3-2021.10"
      - run: sudo apt-get update && sudo apt-get install ninja-build
      - uses: hendrikmuhs/ccache-action@faf867a11c028c0b483fb2ae72b6fc8f7d842714 # v1.2.12
        with:
          key: ${{ github.job }}
      - uses: lukka/run-cmake@2ce8982be71b8e9a3c4d5e432135035afd1e76a7 # v10.7
        with:
          configurePreset: "embedded"
          buildPreset: "embedded-RelWithDebInfo"
          configurePresetAdditionalArgs: "['-DCMAKE_C_COMPILER_LAUNCHER=ccache', '-DCMAKE_CXX_COMPILER_LAUNCHER=ccache']"
  rtos:
    name: Embedded Build - RTOS
    runs-on: ubuntu-latest
    needs: [host_build_test_ubuntu]
    strategy:
      matrix:
        rtos: ["FreeRTOS", "ThreadX"]
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          persist-credentials: false
      - name: Install GNU Arm Embedded Toolchain 10.3-2021.10
        uses: carlosperate/arm-none-eabi-gcc-action@3bd7199be896455c00fffba8a216770a3003a538 # v1.8.1
        with:
          release: "10.3-2021.10"
      - run: sudo apt-get update && sudo apt-get install ninja-build
      - uses: hendrikmuhs/ccache-action@faf867a11c028c0b483fb2ae72b6fc8f7d842714 # v1.2.12
        with:
          key: ${{ github.job }}
      - uses: actions/download-artifact@8caf195ad4b1dee92908e23f56eeb0696f1dd42d # v4.1.5
        with:
          name: emil
      - run: tar -zxvf emil-*.tar.gz
      - run: mkdir install && mv emil-*/* install/
      - uses: lukka/run-cmake@2ce8982be71b8e9a3c4d5e432135035afd1e76a7 # v10.7
        with:
          configurePreset: "embedded-${{ matrix.rtos }}"
          buildPreset: "embedded-${{ matrix.rtos }}-RelWithDebInfo"
          configurePresetAdditionalArgs: "['-DCMAKE_C_COMPILER_LAUNCHER=ccache', '-DCMAKE_CXX_COMPILER_LAUNCHER=ccache']"
