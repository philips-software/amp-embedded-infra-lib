---
name: Continuous Integration

on:
  push:
    branches: [develop, modern-cmake]
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  GTEST_COLOR: 1

jobs:
  host_build_test:
    name: Host Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
        with:
          persist-credentials: false
      - uses: hendrikmuhs/ccache-action@657bab9aeb32eb6d913c2e6882efad4bb7536d94
        with:
          key: ${{ github.job }}-${{ matrix.os }}
          variant: sccache
      - uses: lukka/run-cmake@8997c3a96bcb3de493d1f2527cb46fd7348ca764
        with:
          configurePreset: "ContinuousIntegration"
          buildPreset: "ContinuousIntegration"
          testPreset: "ContinuousIntegration"
          configurePresetCmdString: "['--preset', '$[env.CONFIGURE_PRESET_NAME]', '-D', 'CMAKE_C_COMPILER_LAUNCHER=sccache', '-D', 'CMAKE_CXX_COMPILER_LAUNCHER=sccache']"
  embedded_build:
    name: Embedded Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gcc:
          [
            "5-2016-q3",
            "6-2017-q2",
            "7-2018-q2",
            "8-2019-q3",
            "9-2020-q2",
            "10.3-2021.10",
          ]
        configuration: ["RelWithDebInfo", "Release"]
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
        with:
          persist-credentials: false
      - name: Install GNU Arm Embedded Toolchain ${{ matrix.gcc }}
        uses: carlosperate/arm-none-eabi-gcc-action@48db4484a55750df7a0ccca63347fcdea6534d78
        with:
          release: ${{ matrix.gcc }}
      - uses: seanmiddleditch/gha-setup-ninja@16b940825621068d98711680b6c3ff92201f8fc0
      - uses: hendrikmuhs/ccache-action@657bab9aeb32eb6d913c2e6882efad4bb7536d94
        with:
          key: ${{ matrix.gcc }}-${{ matrix.configuration }}
      - run: |
          echo "::add-matcher::.github/matchers/gcc-problem-matcher.json"
          cmake --preset Host -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          cmake --build --preset Host-${{ matrix.configuration }}
          cmake --preset Embedded -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          cmake --build --preset Embedded-${{ matrix.configuration }}
