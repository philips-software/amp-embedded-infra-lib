set(${CMAKE_PROJECT_NAME}_VERSION_STRING "")
set(${CMAKE_PROJECT_NAME}_VERSION_STRING_FULL "")
set(${CMAKE_PROJECT_NAME}_VERSION_GIT_SHA)

find_package(Git QUIET)

if (GIT_FOUND)
    execute_process(COMMAND ${GIT_EXECUTABLE} -C ${PROJECT_SOURCE_DIR} rev-parse --short @{0}
        OUTPUT_VARIABLE ${CMAKE_PROJECT_NAME}_VERSION_GIT_SHA
        OUTPUT_STRIP_TRAILING_WHITESPACE
        ERROR_QUIET)
endif()

set(${CMAKE_PROJECT_NAME}_VERSION_STRING ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})

if (${CMAKE_PROJECT_NAME}_VERSION_GIT_SHA)
    set(${CMAKE_PROJECT_NAME}_VERSION_STRING_FULL
        ${${CMAKE_PROJECT_NAME}_VERSION_STRING}+${${CMAKE_PROJECT_NAME}_VERSION_GIT_SHA})
else()
    set(${CMAKE_PROJECT_NAME}_VERSION_STRING_FULL ${${CMAKE_PROJECT_NAME}_VERSION_STRING})
endif()

configure_file(${VERSION_INPUT_FILE} ${VERSION_OUTPUT_FILE}.temp)

file(COPY_FILE ${VERSION_OUTPUT_FILE}.temp ${VERSION_OUTPUT_FILE} ONLY_IF_DIFFERENT)
file(REMOVE ${VERSION_OUTPUT_FILE}.temp)
