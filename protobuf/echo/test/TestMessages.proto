syntax = "proto3";

import "EchoAttributes.proto";

package test_messages;
option java_package = "com.philips.emil.protobufEcho";
option java_outer_classname = "TestMessagesProto";

enum Enumeration {
  val0 = 0;
  val1 = 1;
}

message TestEnum {
  Enumeration e = 1;
}

message TestInt32 {
  int32 value = 1;
}

message TestInt64 {
  int64 value = 1;
}

message TestUInt32 {
  uint32 value = 1;
}

message TestUInt64 {
  uint64 value = 1;
}

message TestFixed32 {
  fixed32 value = 1;
}

message TestFixed64 {
  sfixed64 value = 1;
}

message TestSFixed64 {
  fixed64 value = 1;
}

message TestSFixed32 {
  sfixed32 value = 1;
}

message TestBool {
  bool value = 1;
}

message TestString {
  string value = 1 [(string_size) = 20];
}

message TestStdString {
  string value = 1;
}

message TestRepeatedString {
  repeated string value = 1 [(string_size) = 20, (array_size) = 10];
}

message TestBytes {
  bytes value = 1 [(bytes_size) = 50];
}

message TestUnboundedBytes {
  bytes value = 1;
}

message TestRepeatedUInt32 {
  repeated uint32 value = 1 [(array_size) = 50];
}

message TestUnboundedRepeatedUInt32 {
  repeated uint32 value = 1;
}

message TestMessageWithMessageField {
  TestUInt32 message = 1;
}

message TestRepeatedEverything {
  repeated Enumeration v1 = 1 [(array_size) = 10];
  repeated int32 v2 = 2 [(array_size) = 10];
  repeated int64 v3 = 3 [(array_size) = 10];
  repeated uint32 v4 = 4 [(array_size) = 10];
  repeated uint64 v5 = 5 [(array_size) = 10];
  repeated fixed32 v6 = 6 [(array_size) = 10];
  repeated sfixed64 v7 = 7 [(array_size) = 10];
  repeated fixed64 v8 = 8 [(array_size) = 10];
  repeated sfixed32 v9 = 9 [(array_size) = 10];
  repeated bool v10 = 10 [(array_size) = 10];
  repeated string v11 = 11 [(string_size) = 20, (array_size) = 10];
  repeated string v12 = 12 [(array_size) = 10];
  repeated TestUInt32 v13 = 13 [(array_size) = 10];
  repeated bytes v14 = 14 [(bytes_size) = 10, (array_size) = 10];
  repeated bytes v15 = 15 [(array_size) = 10];
}

message TestUnboundedRepeatedEverything {
  repeated Enumeration v1 = 1;
  repeated int32 v2 = 2;
  repeated int64 v3 = 3;
  repeated uint32 v4 = 4;
  repeated uint64 v5 = 5;
  repeated fixed32 v6 = 6;
  repeated sfixed64 v7 = 7;
  repeated fixed64 v8 = 8;
  repeated sfixed32 v9 = 9;
  repeated bool v10 = 10;
  repeated string v11 = 11 [(string_size) = 20];
  repeated string v12 = 12;
  repeated TestUInt32 v13 = 13;
  repeated bytes v14 = 14 [(bytes_size) = 10];
  repeated bytes v15 = 15;
}

message TestNestedMessage
{
    message NestedMessage
    {
        uint32 value = 1;
    }

    NestedMessage message = 1;
}

message TestMoreNestedMessage
{
    message NestedMessage1
    {
        uint32 value = 1;
    }

    message NestedMessage2
    {
        uint32 value = 2;
    }

    NestedMessage1 message1 = 1;
    NestedMessage2 message2 = 2;
}

message TestNestedRepeatedMessage
{
    message NestedMessage
    {
        uint32 value = 1;
    }

    repeated NestedMessage message = 1 [(array_size) = 10];
}

message TestEmptyMessage
{
}

service TestService1
{
  option (service_id) = 1;

  rpc Method(TestUInt32) returns (Nothing) { option (method_id) = 1; }
}

service TestService2
{
  option (service_id) = 2;

  rpc Search (TestString) returns (Nothing) { option (method_id) = 1; }
}

message TestBoolWithBytes {
  bytes b = 1 [(bytes_size) = 30];
  bool value = 2;
}
