syntax = "proto3";

import "EchoAttributes.proto";

package gatt;
option java_package = "com.philips.emil.protobufEcho";
option java_outer_classname = "GattProto";

message DisServiceData
{
    bytes manufacturerName = 1 [(bytes_size) =  32];
    bytes modelNumber = 2 [(bytes_size) =  32];
    bytes serialNumber = 3 [(bytes_size) =  32];
    bytes hardwareRevision = 4 [(bytes_size) =  32];
    bytes firmwareRevision = 5 [(bytes_size) =  32];
    bytes softwareRevision = 6 [(bytes_size) =  32];
    bytes systemId = 7 [(bytes_size) =  8];
    bytes ieeeRegulatoryCertificationDataList = 8 [(bytes_size) =  32];
    bytes pnpId = 9 [(bytes_size) =  7];
}

service GattServerDisService
{
    option (service_id) = 132;

    rpc SetDisServiceData(DisServiceData) returns(Nothing) { option (method_id) = 1; }
}

message MtuSize
{
    uint32 value = 1;
}

message Handle
{
    uint32 value = 1;
}

message CharacteristicData
{
    Handle handle = 1;
    bytes data = 2 [(bytes_size) = 512];
}

message HandleRange
{
    Handle startHandle = 1;
    Handle endHandle = 2;
}

message Service
{
    bytes uuid = 1 [(bytes_size) = 16];
    HandleRange handles = 2;
}

message Characteristic
{
    bytes uuid = 1 [(bytes_size) = 16];
    Handle handle = 2;
    Handle valueHandle = 3;
    uint32 properties = 4;
}

message Descriptr
//'Descriptor' keyword is not allowed by Echo code generator 
{
    bytes uuid = 1 [(bytes_size) = 16];
    Handle handle = 2;
}

message GattResult
{
    enum ResultEnum
    {
        Success = 0;
        InsufficientAuthentication = 1;
        UnknownError = 2;
    }

    ResultEnum result = 1;
}

message ReadResult
{
    GattResult result = 1;
    CharacteristicData data = 2;
}

service GattClient
{
    option (service_id) = 134;

    rpc MtuSizeExchangeRequest(Nothing) returns (Nothing) { option (method_id) = 1; }

    rpc StartServiceDiscovery(Nothing) returns (Nothing) { option (method_id) = 2; }
    rpc StartCharacteristicDiscovery(HandleRange) returns (Nothing) { option (method_id) = 4; }
    rpc StartDescriptorDiscovery(HandleRange) returns (Nothing) { option (method_id) = 6; }

    rpc Read(Handle) returns (Nothing) { option (method_id) = 8; }
    rpc Write(CharacteristicData) returns (Nothing) { option (method_id) = 9; }
    rpc WriteWithoutResponse(CharacteristicData) returns (Nothing) { option (method_id) = 10; }

    rpc EnableNotification(Handle) returns (Nothing) { option (method_id) = 11; };
    rpc DisableNotification(Handle) returns (Nothing) { option (method_id) = 12; };
    rpc EnableIndication(Handle) returns (Nothing) { option (method_id) = 13; };
    rpc DisableIndication(Handle) returns (Nothing) { option (method_id) = 14; };

    rpc IndicationDone(Nothing) returns (Nothing) { option (method_id) = 15; };
}

service GattClientResponse
{
    option (service_id) = 135;

    rpc MtuSizeExchangeComplete(MtuSize) returns (Nothing) { option (method_id) = 1; }

    rpc ServiceDiscovered(Service) returns (Nothing) { option (method_id) = 2; }
    rpc ServiceDiscoveryComplete(Nothing) returns (Nothing) { option (method_id) = 3; }
    
    rpc CharacteristicDiscovered(Characteristic) returns (Nothing) { option (method_id) = 4; }
    rpc CharacteristicDiscoveryComplete(Nothing) returns (Nothing) { option (method_id) = 5; }

    rpc DescriptorDiscovered(Descriptr) returns (Nothing) { option (method_id) = 6; }
    rpc DescriptorDiscoveryComplete(Nothing) returns (Nothing) { option (method_id) = 7; }

    rpc ReadComplete(ReadResult) returns (Nothing) { option (method_id) = 8; }
    rpc WriteComplete(GattResult) returns (Nothing) { option (method_id) = 9; }
    rpc SubscriptionChangeDone(Nothing) returns (Nothing) { option (method_id) = 10; }

    rpc IndicationReceived(CharacteristicData) returns (Nothing) { option (method_id) = 11; }
    rpc NotificationReceived(CharacteristicData) returns (Nothing) { option (method_id) = 12; }
}

