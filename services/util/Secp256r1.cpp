#include "services/util/Secp256r1.hpp"

namespace
{
    // clang-format off
    // 2^256 - 2^224 + 2^192 + 2^96 âˆ’ 1
    constexpr std::array<uint8_t, 32> finiteFieldModulus = {
        0xFF, 0xFF, 0xFF, 0xFF,
        0x00, 0x00, 0x00, 0x01,
        0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0xFF, 0xFF, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0xFF
    };

    constexpr std::array<uint8_t, 32> curveParameterA = {
        0xFF, 0xFF, 0xFF, 0xFF,
        0x00, 0x00, 0x00, 0x01,
        0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0xFF, 0xFF, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0xFC
    };

    constexpr std::array<uint8_t, 32> curveParameterB = {
        0x5A, 0xC6, 0x35, 0xD8,
        0xAA, 0x3A, 0x93, 0xE7,
        0xB3, 0xEB, 0xBD, 0x55,
        0x76, 0x98, 0x86, 0xBC,
        0x65, 0x1D, 0x06, 0xB0,
        0xCC, 0x53, 0xB0, 0xF6,
        0x3B, 0xCE, 0x3C, 0x3E,
        0x27, 0xD2, 0x60, 0x4B
    };

    constexpr std::array<uint8_t, 32> pointGx = {
        0x6B, 0x17, 0xD1, 0xF2,
        0xE1, 0x2C, 0x42, 0x47,
        0xF8, 0xBC, 0xE6, 0xE5,
        0x63, 0xA4, 0x40, 0xF2,
        0x77, 0x03, 0x7D, 0x81,
        0x2D, 0xEB, 0x33, 0xA0,
        0xF4, 0xA1, 0x39, 0x45,
        0xD8, 0x98, 0xC2, 0x96
    };

    constexpr std::array<uint8_t, 32> pointGy = {
        0x4F, 0xE3, 0x42, 0xE2,
        0xFE, 0x1A, 0x7F, 0x9B,
        0x8E, 0xE7, 0xEB, 0x4A,
        0x7C, 0x0F, 0x9E, 0x16,
        0x2B, 0xCE, 0x33, 0x57,
        0x6B, 0x31, 0x5E, 0xCE,
        0xCB, 0xB6, 0x40, 0x68,
        0x37, 0xBF, 0x51, 0xF5
    };

    constexpr std::array<uint8_t, 32> orderOfG = {
        0xFF, 0xFF, 0xFF, 0xFF,
        0x00, 0x00, 0x00, 0x00,
        0xFF, 0xFF, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0xFF,
        0xBC, 0xE6, 0xFA, 0xAD,
        0xA7, 0x17, 0x9E, 0x84,
        0xF3, 0xB9, 0xCA, 0xC2,
        0xFC, 0x63, 0x25, 0x51
    };

    constexpr std::array<uint8_t, 32> montgomeryParameterR2 = {
        0xFF, 0xFF, 0xFF, 0xFC,
        0xFF, 0xFF, 0xFF, 0xFC,
        0xFF, 0xFF, 0xFF, 0xFB,
        0xFF, 0xFF, 0xFF, 0xF9,
        0xFF, 0xFF, 0xFF, 0xFE,
        0x00, 0x00, 0x00, 0x03,
        0x00, 0x00, 0x00, 0x05,
        0x00, 0x00, 0x00, 0x02,
    };

    constexpr std::array<uint8_t, 32> curveParameterAbsoluteA = {
        0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x03,
    };
    // clang-format on
}

namespace services
{
    const EllipticCurveExtendedParameters secp256r1{
        infra::MakeRange(finiteFieldModulus),
        infra::MakeRange(curveParameterA),
        infra::MakeRange(curveParameterB),
        infra::MakeRange(pointGx),
        infra::MakeRange(pointGy),
        infra::MakeRange(orderOfG),
        1, // cofactor
        infra::MakeRange(curveParameterAbsoluteA),
        false,
        infra::MakeRange(montgomeryParameterR2)
    };
}
